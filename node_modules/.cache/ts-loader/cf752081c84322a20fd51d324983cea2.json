{"remainingRequest":"/Users/guorun/Desktop/testVercel/vue3.0/node_modules/ts-loader/index.js??ref--14-1!/Users/guorun/Desktop/testVercel/vue3.0/node_modules/eslint-loader/index.js??ref--13-0!/Users/guorun/Desktop/testVercel/vue3.0/src/store.ts","dependencies":[{"path":"/Users/guorun/Desktop/testVercel/vue3.0/src/store.ts","mtime":1733291579644},{"path":"/Users/guorun/Desktop/testVercel/vue3.0/node_modules/cache-loader/dist/cjs.js","mtime":1733292094796},{"path":"/Users/guorun/Desktop/testVercel/vue3.0/node_modules/ts-loader/index.js","mtime":1733292094861},{"path":"/Users/guorun/Desktop/testVercel/vue3.0/node_modules/eslint-loader/index.js","mtime":1732243971177}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAidnVleCI7CmltcG9ydCB7IHRlc3REYXRhLCB0ZXN0UG9zdHMgfSBmcm9tICIuL3Rlc3REYXRhIjsKdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUoewogICAgc3RhdGU6IHsKICAgICAgICBjb2x1bW5zOiB0ZXN0RGF0YSwKICAgICAgICBwb3N0czogdGVzdFBvc3RzLAogICAgICAgIHVzZXI6IHsgaXNsb2dpbjogZmFsc2UsIG5hbWU6ICd6ZGInLCBjb2x1bW5JZDogMSB9CiAgICB9LAogICAgbXV0YXRpb25zOiB7CiAgICAgICAgbG9naW46IGZ1bmN0aW9uIChzdGF0ZSkgewogICAgICAgICAgICBzdGF0ZS51c2VyID0gX19hc3NpZ24oX19hc3NpZ24oe30sIHN0YXRlLnVzZXIpLCB7IGlzbG9naW46IHRydWUsIG5hbWU6ICd6ZGIta2luZycgfSk7CiAgICAgICAgfSwKICAgICAgICBjcmVhdFBvc3RzOiBmdW5jdGlvbiAoc3RhdGUsIGRhdGEpIHsKICAgICAgICAgICAgc3RhdGUucG9zdHMucHVzaChkYXRhKTsKICAgICAgICB9CiAgICB9LAogICAgZ2V0dGVyczogewogICAgICAgIGNvbHVtc0xlbmd0aDogZnVuY3Rpb24gKHN0YXRlKSB7CiAgICAgICAgICAgIHJldHVybiBzdGF0ZS5jb2x1bW5zLmZpbHRlcihmdW5jdGlvbiAoYykgeyByZXR1cm4gYy5pZCA+IDI7IH0pLmxlbmd0aDsKICAgICAgICB9LAogICAgICAgIGdldENvbHVtbkJ5SWQ6IGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gZnVuY3Rpb24gKGlkKSB7CiAgICAgICAgICAgIHJldHVybiBzdGF0ZS5jb2x1bW5zLmZpbmQoZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGMuaWQgPT09IGlkOyB9KTsKICAgICAgICB9OyB9LAogICAgICAgIGdldFBvc3RzQnlDaWQ6IGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gZnVuY3Rpb24gKGNpZCkgewogICAgICAgICAgICByZXR1cm4gc3RhdGUucG9zdHMuZmlsdGVyKGZ1bmN0aW9uIChwb3N0KSB7IHJldHVybiBwb3N0LmNvbHVtbklkID09PSBjaWQ7IH0pOwogICAgICAgIH07IH0KICAgIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHN0b3JlOwo="},{"version":3,"file":"/Users/guorun/Desktop/testVercel/vue3.0/src/store.ts","sourceRoot":"","sources":["/Users/guorun/Desktop/testVercel/vue3.0/node_modules/eslint-loader/index.js??ref--13-0!/Users/guorun/Desktop/testVercel/vue3.0/src/store.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,MAAM,CAAC;AACnC,OAAO,EAAa,QAAQ,EAAC,SAAS,EAAwB,MAAM,YAAY,CAAC;AAMjF,IAAM,KAAK,GAAE,WAAW,CAAmB;IACzC,KAAK,EAAC;QACJ,OAAO,EAAC,QAAQ;QAChB,KAAK,EAAC,SAAS;QACf,IAAI,EAAC,EAAE,OAAO,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,EAAE;KAC7C;IACD,SAAS,EAAC;QACR,KAAK,YAAC,KAAK;YACT,KAAK,CAAC,IAAI,yBAAK,KAAK,CAAC,IAAI,KAAC,OAAO,EAAC,IAAI,EAAC,IAAI,EAAC,UAAU,GAAC,CAAA;QACzD,CAAC;QACD,UAAU,YAAC,KAAK,EAAC,IAAI;YACnB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACxB,CAAC;KACA;IACH,OAAO,EAAC;QACN,YAAY,YAAC,KAAK;YACd,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,EAAE,GAAC,CAAC,EAAN,CAAM,CAAC,CAAC,MAAM,CAAA;QACjD,CAAC;QACD,aAAa,EAAC,UAAC,KAAK,IAAG,OAAA,UAAC,EAAS;YAC/B,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,EAAE,KAAG,EAAE,EAAT,CAAS,CAAC,CAAA;QACzC,CAAC,EAFsB,CAEtB;QACD,aAAa,EAAC,UAAC,KAAK,IAAG,OAAA,UAAC,GAAU;YAChC,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAE,OAAA,IAAI,CAAC,QAAQ,KAAG,GAAG,EAAnB,CAAmB,CAAC,CAAA;QACtD,CAAC,EAFsB,CAEtB;KACF;CACF,CAAC,CAAA;AACF,eAAe,KAAK,CAAA","sourcesContent":["import { createStore } from \"vuex\";\nimport { PostProps, testData,testPosts,UserProps,ColumnProps } from \"./testData\";\nexport interface GlobalDataProps{\n  columns:ColumnProps[],\n  posts:PostProps[],\n  user:UserProps\n}\nconst store =createStore<GlobalDataProps >({\n  state:{\n    columns:testData,\n    posts:testPosts,\n    user:{ islogin:false,name:'zdb',columnId:1 }\n  },\n  mutations:{\n    login(state){\n      state.user={...state.user,islogin:true,name:'zdb-king'}\n    },\n    creatPosts(state,data){\n      state.posts.push(data)\n    }\n    },\n  getters:{\n    columsLength(state){\n        return state.columns.filter(c=>c.id>2).length\n    },\n    getColumnById:(state)=>(id:number)=>{\n      return state.columns.find(c=>c.id===id)\n    },\n    getPostsByCid:(state)=>(cid:number)=>{\n      return state.posts.filter(post=>post.columnId===cid)\n    }\n  }\n})\nexport default store"]}]}